#!/usr/bin/env python3

import amulet
import requests
import unittest

import socket


def test_netcat(host, port, content):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, int(port)))
    s.sendall(content.encode())
    s.shutdown(socket.SHUT_WR)
    while True:
        data = s.recv(4096)
        if not data:
            break
        dat = data
    s.close()
    return dat


class TestDeployment(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.deployment = amulet.Deployment(series='trusty')

        cls.deployment.add('fiche')
        cls.deployment.configure('fiche', {'fiche-server-port': 9999})
        cls.deployment.expose('fiche')

        try:
            cls.deployment.setup(timeout=900)
            cls.deployment.sentry.wait()
        except amulet.helpers.TimeoutError:
            amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
        except:
            raise
        cls.unit = cls.deployment.sentry.unit['fiche/0']
        cls.ipaddr = cls.unit.info['public-address']


     # This should succeed whether or not I have any code deployed
     def test_1_verify_homepage(self):
        #response = requests.get(self.ipaddr)
        #response.raise_for_status()
        pass


if __name__ == '__main__':
    unittest.main()
